// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package bizzomatetokenreplacer.proxies;

public enum DateFormat
{
	dd_MM_yyyy(new java.lang.String[][] { new java.lang.String[] { "en_US", "dd-MM-yyyy" }, new java.lang.String[] { "nl_NL", "dd-MM-yyyy" }, new java.lang.String[] { "nl_BE", "dd-MM-yyyy" } }),
	dd_MM_yyyy_HH_mm(new java.lang.String[][] { new java.lang.String[] { "en_US", "dd-MM-yyyy HH:mm" }, new java.lang.String[] { "nl_NL", "dd-MM-yyyy HH:mm" }, new java.lang.String[] { "nl_BE", "dd-MM-yyyy HH:mm" } }),
	dd_MMM_yyyy(new java.lang.String[][] { new java.lang.String[] { "en_US", "dd MMM yyyy" }, new java.lang.String[] { "nl_NL", "dd MMM yyyy" }, new java.lang.String[] { "nl_BE", "dd MMM yyyy" } }),
	dd_MMM_yyyy_HH_mm(new java.lang.String[][] { new java.lang.String[] { "en_US", "dd MMM yyyy HH:mm" }, new java.lang.String[] { "nl_NL", "dd MMM yyyy HH:mm" }, new java.lang.String[] { "nl_BE", "dd MMM yyyy HH:mm" } }),
	dd_MMMMM_yyyy(new java.lang.String[][] { new java.lang.String[] { "en_US", "dd MMMMM yyyy" }, new java.lang.String[] { "nl_NL", "dd MMMMM yyyy" }, new java.lang.String[] { "nl_BE", "dd MMMMM yyyy" } }),
	dd_MMMMM_yyyy_HH_mm(new java.lang.String[][] { new java.lang.String[] { "en_US", "dd MMMMM yyyy HH:mm" }, new java.lang.String[] { "nl_NL", "dd MMMMM yyyy HH:mm" }, new java.lang.String[] { "nl_BE", "dd MMMMM yyyy HH:mm" } }),
	EEE_dd_MMM_yyyy(new java.lang.String[][] { new java.lang.String[] { "en_US", "EEE dd MMM yyyy" }, new java.lang.String[] { "nl_NL", "EEE dd MMM yyyy" }, new java.lang.String[] { "nl_BE", "EEE dd MMM yyyy" } }),
	EEE_dd_MMM_yyyy_HH_mm(new java.lang.String[][] { new java.lang.String[] { "en_US", "EEE dd MMM yyyy HH:mm" }, new java.lang.String[] { "nl_NL", "EEE dd MMM yyyy HH:mm" }, new java.lang.String[] { "nl_BE", "EEE dd MMM yyyy HH:mm" } }),
	EEE_dd_MMMMM_yyyy(new java.lang.String[][] { new java.lang.String[] { "en_US", "EEE dd MMMMM yyyy" }, new java.lang.String[] { "nl_NL", "EEE dd MMMMM yyyy" }, new java.lang.String[] { "nl_BE", "EEE dd MMMMM yyyy" } }),
	EEE_dd_MMMMM_yyyy_HH_mm(new java.lang.String[][] { new java.lang.String[] { "en_US", "EEE dd MMMMM yyyy HH:mm" }, new java.lang.String[] { "nl_NL", "EEE dd MMMMM yyyy HH:mm" }, new java.lang.String[] { "nl_BE", "EEE dd MMMMM yyyy HH:mm" } }),
	Free_format(new java.lang.String[][] { new java.lang.String[] { "en_US", "Free format" }, new java.lang.String[] { "nl_NL", "Vrij formaat" }, new java.lang.String[] { "nl_BE", "Vrij formaat" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private DateFormat(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
