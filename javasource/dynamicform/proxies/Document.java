// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package dynamicform.proxies;

public class Document extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DynamicForm.Document";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Filename("Filename"),
		Uploaded("Uploaded"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		Document_Doc("DynamicForm.Document_Doc");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Document(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DynamicForm.Document"));
	}

	protected Document(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject documentMendixObject)
	{
		super(context, documentMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("DynamicForm.Document", documentMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DynamicForm.Document");
	}

	/**
	 * @deprecated Use 'Document.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static dynamicform.proxies.Document initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return dynamicform.proxies.Document.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static dynamicform.proxies.Document initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new dynamicform.proxies.Document(context, mendixObject);
	}

	public static dynamicform.proxies.Document load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return dynamicform.proxies.Document.initialize(context, mendixObject);
	}

	public static java.util.List<dynamicform.proxies.Document> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<dynamicform.proxies.Document> result = new java.util.ArrayList<dynamicform.proxies.Document>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DynamicForm.Document" + xpathConstraint))
			result.add(dynamicform.proxies.Document.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Filename
	 */
	public final java.lang.String getFilename()
	{
		return getFilename(getContext());
	}

	/**
	 * @param context
	 * @return value of Filename
	 */
	public final java.lang.String getFilename(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Filename.toString());
	}

	/**
	 * Set value of Filename
	 * @param filename
	 */
	public final void setFilename(java.lang.String filename)
	{
		setFilename(getContext(), filename);
	}

	/**
	 * Set value of Filename
	 * @param context
	 * @param filename
	 */
	public final void setFilename(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String filename)
	{
		getMendixObject().setValue(context, MemberNames.Filename.toString(), filename);
	}

	/**
	 * @return value of Uploaded
	 */
	public final java.lang.Boolean getUploaded()
	{
		return getUploaded(getContext());
	}

	/**
	 * @param context
	 * @return value of Uploaded
	 */
	public final java.lang.Boolean getUploaded(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Uploaded.toString());
	}

	/**
	 * Set value of Uploaded
	 * @param uploaded
	 */
	public final void setUploaded(java.lang.Boolean uploaded)
	{
		setUploaded(getContext(), uploaded);
	}

	/**
	 * Set value of Uploaded
	 * @param context
	 * @param uploaded
	 */
	public final void setUploaded(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean uploaded)
	{
		getMendixObject().setValue(context, MemberNames.Uploaded.toString(), uploaded);
	}

	/**
	 * @return value of Document_Doc
	 */
	public final dynamicform.proxies.Doc getDocument_Doc() throws com.mendix.core.CoreException
	{
		return getDocument_Doc(getContext());
	}

	/**
	 * @param context
	 * @return value of Document_Doc
	 */
	public final dynamicform.proxies.Doc getDocument_Doc(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		dynamicform.proxies.Doc result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Document_Doc.toString());
		if (identifier != null)
			result = dynamicform.proxies.Doc.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Document_Doc
	 * @param document_doc
	 */
	public final void setDocument_Doc(dynamicform.proxies.Doc document_doc)
	{
		setDocument_Doc(getContext(), document_doc);
	}

	/**
	 * Set value of Document_Doc
	 * @param context
	 * @param document_doc
	 */
	public final void setDocument_Doc(com.mendix.systemwideinterfaces.core.IContext context, dynamicform.proxies.Doc document_doc)
	{
		if (document_doc == null)
			getMendixObject().setValue(context, MemberNames.Document_Doc.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Document_Doc.toString(), document_doc.getMendixObject().getId());
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final dynamicform.proxies.Document that = (dynamicform.proxies.Document) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DynamicForm.Document";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
