// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package dynamicform.proxies;

public class Decimal extends dynamicform.proxies.Element
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DynamicForm.Decimal";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DecimalValue("DecimalValue"),
		NameoftheAttribute("NameoftheAttribute"),
		Required("Required"),
		LayoutNo("LayoutNo"),
		LayoutType("LayoutType"),
		Validation("Validation"),
		Element_Template("DynamicForm.Element_Template");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Decimal(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DynamicForm.Decimal"));
	}

	protected Decimal(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject decimalMendixObject)
	{
		super(context, decimalMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("DynamicForm.Decimal", decimalMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DynamicForm.Decimal");
	}

	/**
	 * @deprecated Use 'Decimal.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static dynamicform.proxies.Decimal initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return dynamicform.proxies.Decimal.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static dynamicform.proxies.Decimal initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new dynamicform.proxies.Decimal(context, mendixObject);
	}

	public static dynamicform.proxies.Decimal load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return dynamicform.proxies.Decimal.initialize(context, mendixObject);
	}

	public static java.util.List<dynamicform.proxies.Decimal> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<dynamicform.proxies.Decimal> result = new java.util.ArrayList<dynamicform.proxies.Decimal>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DynamicForm.Decimal" + xpathConstraint))
			result.add(dynamicform.proxies.Decimal.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of DecimalValue
	 */
	public final java.math.BigDecimal getDecimalValue()
	{
		return getDecimalValue(getContext());
	}

	/**
	 * @param context
	 * @return value of DecimalValue
	 */
	public final java.math.BigDecimal getDecimalValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.DecimalValue.toString());
	}

	/**
	 * Set value of DecimalValue
	 * @param decimalvalue
	 */
	public final void setDecimalValue(java.math.BigDecimal decimalvalue)
	{
		setDecimalValue(getContext(), decimalvalue);
	}

	/**
	 * Set value of DecimalValue
	 * @param context
	 * @param decimalvalue
	 */
	public final void setDecimalValue(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal decimalvalue)
	{
		getMendixObject().setValue(context, MemberNames.DecimalValue.toString(), decimalvalue);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final dynamicform.proxies.Decimal that = (dynamicform.proxies.Decimal) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DynamicForm.Decimal";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
