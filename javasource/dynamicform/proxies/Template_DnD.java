// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package dynamicform.proxies;

public class Template_DnD
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject template_DnDMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DynamicForm.Template_DnD";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Template_DnD_Dragged("DynamicForm.Template_DnD_Dragged"),
		Template_DnD_Dropped("DynamicForm.Template_DnD_Dropped");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Template_DnD(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DynamicForm.Template_DnD"));
	}

	protected Template_DnD(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject template_DnDMendixObject)
	{
		if (template_DnDMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DynamicForm.Template_DnD", template_DnDMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DynamicForm.Template_DnD");

		this.template_DnDMendixObject = template_DnDMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Template_DnD.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static dynamicform.proxies.Template_DnD initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return dynamicform.proxies.Template_DnD.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static dynamicform.proxies.Template_DnD initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new dynamicform.proxies.Template_DnD(context, mendixObject);
	}

	public static dynamicform.proxies.Template_DnD load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return dynamicform.proxies.Template_DnD.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Template_DnD_Dragged
	 */
	public final dynamicform.proxies.Template getTemplate_DnD_Dragged() throws com.mendix.core.CoreException
	{
		return getTemplate_DnD_Dragged(getContext());
	}

	/**
	 * @param context
	 * @return value of Template_DnD_Dragged
	 */
	public final dynamicform.proxies.Template getTemplate_DnD_Dragged(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		dynamicform.proxies.Template result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Template_DnD_Dragged.toString());
		if (identifier != null)
			result = dynamicform.proxies.Template.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Template_DnD_Dragged
	 * @param template_dnd_dragged
	 */
	public final void setTemplate_DnD_Dragged(dynamicform.proxies.Template template_dnd_dragged)
	{
		setTemplate_DnD_Dragged(getContext(), template_dnd_dragged);
	}

	/**
	 * Set value of Template_DnD_Dragged
	 * @param context
	 * @param template_dnd_dragged
	 */
	public final void setTemplate_DnD_Dragged(com.mendix.systemwideinterfaces.core.IContext context, dynamicform.proxies.Template template_dnd_dragged)
	{
		if (template_dnd_dragged == null)
			getMendixObject().setValue(context, MemberNames.Template_DnD_Dragged.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Template_DnD_Dragged.toString(), template_dnd_dragged.getMendixObject().getId());
	}

	/**
	 * @return value of Template_DnD_Dropped
	 */
	public final dynamicform.proxies.Template getTemplate_DnD_Dropped() throws com.mendix.core.CoreException
	{
		return getTemplate_DnD_Dropped(getContext());
	}

	/**
	 * @param context
	 * @return value of Template_DnD_Dropped
	 */
	public final dynamicform.proxies.Template getTemplate_DnD_Dropped(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		dynamicform.proxies.Template result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Template_DnD_Dropped.toString());
		if (identifier != null)
			result = dynamicform.proxies.Template.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Template_DnD_Dropped
	 * @param template_dnd_dropped
	 */
	public final void setTemplate_DnD_Dropped(dynamicform.proxies.Template template_dnd_dropped)
	{
		setTemplate_DnD_Dropped(getContext(), template_dnd_dropped);
	}

	/**
	 * Set value of Template_DnD_Dropped
	 * @param context
	 * @param template_dnd_dropped
	 */
	public final void setTemplate_DnD_Dropped(com.mendix.systemwideinterfaces.core.IContext context, dynamicform.proxies.Template template_dnd_dropped)
	{
		if (template_dnd_dropped == null)
			getMendixObject().setValue(context, MemberNames.Template_DnD_Dropped.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Template_DnD_Dropped.toString(), template_dnd_dropped.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return template_DnDMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final dynamicform.proxies.Template_DnD that = (dynamicform.proxies.Template_DnD) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DynamicForm.Template_DnD";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
