// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package administration.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Administration module
	public static void aCT_Save_EditAccount(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		Core.microflowCall("Administration.ACT_Save_EditAccount").withParams(params).execute(context);
	}
	public static boolean cAL_AssignBooleanBlock(IContext context, ugs.proxies.Interview _interview)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Interview", _interview == null ? null : _interview.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Administration.CAL_AssignBooleanBlock").withParams(params).execute(context);
	}
	public static void changeMyPassword(IContext context, administration.proxies.AccountPasswordData _accountPasswordData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccountPasswordData", _accountPasswordData == null ? null : _accountPasswordData.getMendixObject());
		Core.microflowCall("Administration.ChangeMyPassword").withParams(params).execute(context);
	}
	public static void changePassword(IContext context, administration.proxies.AccountPasswordData _accountPasswordData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccountPasswordData", _accountPasswordData == null ? null : _accountPasswordData.getMendixObject());
		Core.microflowCall("Administration.ChangePassword").withParams(params).execute(context);
	}
	public static ugs.proxies.ReviewForm ds_getCurrentReviewForm(IContext context, ugs.proxies.GrantSystem _grantSystem)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("GrantSystem", _grantSystem == null ? null : _grantSystem.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Administration.Ds_getCurrentReviewForm").withParams(params).execute(context);
		return result == null ? null : ugs.proxies.ReviewForm.initialize(context, result);
	}
	public static java.util.List<ugs.proxies.ReviewForm> dS_GetMainReviewForm(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Administration.DS_GetMainReviewForm").withParams(params).execute(context);
		java.util.List<ugs.proxies.ReviewForm> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(ugs.proxies.ReviewForm.initialize(context, obj));
		}
		return result;
	}
	public static void manageMyAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Administration.ManageMyAccount").withParams(params).execute(context);
	}
	public static void newAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Administration.NewAccount").withParams(params).execute(context);
	}
	/**
	 * Create a new user object and change the default attribute values so the user will be handled as a webservice user.
	 * Finally open the User_NewEdit form so all remaing user information can be set.
	 */
	public static void newWebServiceAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Administration.NewWebServiceAccount").withParams(params).execute(context);
	}
	public static void oCH_OrganizationChange(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		Core.microflowCall("Administration.OCH_OrganizationChange").withParams(params).execute(context);
	}
	public static java.util.List<system.proxies.TimeZone> retrieveTimeZones(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("Administration.RetrieveTimeZones").withParams(params).execute(context);
		java.util.List<system.proxies.TimeZone> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.TimeZone.initialize(context, obj));
		}
		return result;
	}
	public static void saveNewAccount(IContext context, administration.proxies.AccountPasswordData _accountPasswordData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccountPasswordData", _accountPasswordData == null ? null : _accountPasswordData.getMendixObject());
		Core.microflowCall("Administration.SaveNewAccount").withParams(params).execute(context);
	}
	public static void showMyPasswordForm(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		Core.microflowCall("Administration.ShowMyPasswordForm").withParams(params).execute(context);
	}
	public static void showPasswordForm(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		Core.microflowCall("Administration.ShowPasswordForm").withParams(params).execute(context);
	}
	public static void sub_AttachReviewtypesToStages(IContext context, java.util.List<dynamicform.proxies.WorkflowRoles> _workflowRolesList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_workflowRolesList = null;
		if (_workflowRolesList != null)
		{
			listparam_workflowRolesList = new java.util.ArrayList<>();
			for (dynamicform.proxies.WorkflowRoles obj : _workflowRolesList)
				listparam_workflowRolesList.add(obj.getMendixObject());
		}
		params.put("WorkflowRolesList", listparam_workflowRolesList);

		Core.microflowCall("Administration.Sub_AttachReviewtypesToStages").withParams(params).execute(context);
	}
	public static boolean sUB_Save_EditAccount(IContext context, administration.proxies.Account _account)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Account", _account == null ? null : _account.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Administration.SUB_Save_EditAccount").withParams(params).execute(context);
	}
}